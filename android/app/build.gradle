def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    defaultConfig {
        applicationId "com.doctorwork.flutter.toolchain"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        debug {
            keyAlias 'doctorwork'
            keyPassword 'doctorwork'
            storePassword 'doctorwork'
            storeFile file('../keystore/doctorwork_key')
        }

        release {
            keyAlias 'doctorwork'
            keyPassword 'doctorwork'
            storePassword 'doctorwork'
            storeFile file('../keystore/doctorwork_key')
        }
    }

    buildTypes {
        debug {
            // 禁用多个 APK 生成
            splits.abi.enable = false
            splits.density.enable = false
            signingConfig signingConfigs.debug
            minifyEnabled false
            useProguard false
            debuggable true
        }

        release {
            signingConfig signingConfigs.release
            // 开启混淆
            minifyEnabled true
            useProguard true
            zipAlignEnabled true
            // 去除无用资源
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.4.3"
}
